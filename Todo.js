export default class Todo {
  #text; 
  #index;
  constructor(text, pElem, index) { /*Konstruktor l√©trehoz√°sa amiben be√°ll√≠tjuk a priv√°t adattokat*/
    this.#index = index; /*Egyedi index azonos√≠t√≥ minden teend≈ëh√∂z*/
    this.#text = text; /*Sz√∂veg megad√°sa*/
    this.pElem = pElem; /*HTML elem, amihez hozz√° kell adni teend≈ët*/
    this.view(); /*View met√≥dus megh√≠v√°sa*/
    this.textElem = document.querySelector(".text:last-child"); /*Kiv√°lasztja a legutols√≥ "text" elemet, amin bel≈±l megtal√°lj a "pipa" √©s a "delete" gombot*/
    this.OKElem = this.textElem.querySelector(".ready"); /*"pipa" gomb*/
    console.log(this.OKElem); /*Ki√≠rja az OkElemet a konzolra*/
    this.deleteElem = this.textElem.querySelector(".delete:last-child"); /*"delete" gomb*/
    this.OKeventListener();  /*OKeventListener met√≥dus megh√≠v√°sa*/
    this.remEventListener(); /*remEventListener met√≥dus megh√≠v√°sa*/
  }
  view() { /*Egy √∫j HTML <p> elemet hoz l√©tre. Benne van a teend≈ë sz√∂vege. A sz√≠ne z√∂ld, ha k√©sz, egy√©bbk√©nt fekete. K√©t gomb van benne */
    let html = `<p class="text" style="color:${this.#text.state?"green":"black"}">${this.#text.todoText}
            <button class="ready">‚úî</button>
            <button class="delete">üóë</button>
            </p>
            `;
    this.pElem.insertAdjacentHTML("beforeend", html); /*Ezt a HTML k√≥dot hozz√°f≈±zi a megadott pElem-hez*/
  }
  OKeventListener() { /*Esem√©ny figyel≈ët tesz a pipa gomra. Kattint√°s ut√°n egy "done" nev≈± egyedi (CustomEvent) esem√©nyt k√ºld ki az ablrakra (window), az adott teend≈ë index√©vel (detail)*/
    this.OKElem.addEventListener("click", () => {
      const e = new CustomEvent("done", { detail: this.#index });
      window.dispatchEvent(e);
    });   
  }
  remEventListener() { /*Esem√©ny figyel≈ët tesz a kuka gombra. Kattint√°s ut√°n egy "remove" nev≈± esem√©nyt k√ºld ki az ablakra, az adott teend≈ë index√©vel*/
    this.deleteElem.addEventListener("click", () => {
      console.log("delete"); /*Ki√≠rj a konzolra*/
      const e = new CustomEvent("remove", { detail: this.#index });
      window.dispatchEvent(e);
    });
  }
}
